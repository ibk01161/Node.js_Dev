#4. 기본 내장 모듈

- 기본 내장 모듈과 Node.js 문서를 보고 사용하는 방법 익히기
- 문서는 https://nodejs.org/dist/latest-v4.x/docs/api/ 에 있음


4.1. os 모듈 (01_module_os.js 참고)
- os 모듈은 애플리케이션을 만들때 많이 활용되지 않지만, 모듈의 기본적인 사용법을 익히기에 가장 적당함

4.2. url 모듈 (02_module_url.js 참고)

* url 모듈의 메소드
- parse() : URL 문자열을 URL 객체로 변환해 리턴
- format(urlObj) : URL 객체를 URL 문자열로 변환해 리턴
- resolve(from, to) : 매개변수를 조합해 완전한 URL 문자열을 생성해 리턴

4.3. Query String 모듈 (03_module_query_string.js 참고)
- Query String 모듈은 URL 객체의 쿼리와 관련된 모듈

* Query String 모듈의 메소드
- stringify() : 쿼리 객체를 쿼리 문자열로 변환해 리턴
- parse() : 쿼리 문자열을 쿼리 객체로 변환해 리턴

* Query String 모듈은 유용하지만 url 모듈에 기능이 통합되어 있으므로 많이 사용되지 않음

4.4. util 모듈 (04_module_util.js참고)
- util 모듈은 Node.js의 보조적인 기능을 모아둔 모듈

* util 모듈의 메소드
- format() : 매개변수로 입력한 문자열을 조합해 리턴

* format() 메소드는 3장에서의 console.log() 메소드와 비슷하지만, format()은 출력하지 않고 문자열을 반환하는 것

4.5. crypto 모듈
- 해시(암호화된 문자) 생성과 암호화를 수행하는 모듈

* crypto 모듈을 사용해서 해시 생성 (05_01_module_crypto_create_hash.js 참고)    

* crypto 모듈을 사용해 암호화 (05_02_module_crypto_encryption.js 참고)

4.6. File System 모듈
- 파일 처리와 관련된 모듈

* File System 모듈의 메소드
- readFIle() : 파일을 비동기적으로 읽음
- readFileSync() : 파일을 동기적으로 읽음
- writeFile() : 파일을 비동기적으로 씀
- writeFileSync() : 파일을 동기적으로 씀

4.6.1. 파일 읽기 (06_01_module_fs_readFileSync.js, 06_02_module_fs_readFile.js)
- readFileSync() 메소드는 매개변수에 파일 경로와 인코딩 방식을 지정
- 테스트 txt 파일을 UTF-8방식으로 읽고 출력

- readFile() 메소드는 readFileSync() 메소드를 비동기적으로 구현한 메소드
- readFile() 메소드를 만나는 순간 이벤트 리스너를 등록하고 파일을 모두 읽게 만들어 이벤트 리스너를 실행
- 06_02_module_fs_readFile.js에서 파일을 정상적으로 읽으면 콜백 함수의 두 번째 매개변수에 읽은 데이터를 전달 (data)

4.6.2. 파일 쓰기 (06_03_module_fs_write.js)
- writeFile() 메소드와 writeFileSync() 메소드를 사용

4.6.3. 예외 처리 
- 파일을 읽으려고 하는데 파일이 존재하지 않거나, 파일을 쓸 수 없는 위치에 파일을 쓰려고 한다면 예외가 발생해 프로그램이 종료되야 함
- 동기 처리를 하는 메소드는 try catch 구문을 통해 예외 처리 (06_04_module_fs_exception_01.js)
- 비동기 처리를 하는 메소드가 예외를 발생시키면 콜백 함수의 첫 번째 매개변수에 예외와 관련된 정보가 입력됨 (06_04_module_fs_exception_02.js)
- 조건문 안에 변수를 넣은 것은 조건문 안에 undefined 자료형의 변수를 넣을 경우 자동으로 false로 변환되기 때문
- 예외가 발생하지 않았다면 매개변수 error에 어떠한 값도 들어가지 않으므로 else 구문을 실행, 예외가 발생했다면 조건문 안 표현식이 true가 되어 예외 객체를 출력
























