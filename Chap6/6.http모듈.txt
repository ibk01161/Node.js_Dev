#6. http 모듈


6.1. 요청과 응답
- 웹 서버가 하는 일은 요청과 응답의 연속
- 브라우저에 웹 페이지의 주소를 입력하면 웹 서버는 주소에 맞는 웹 페이지를 제공
- 요청하는 대상을 클라이언트 (사용자), 응답하는 대상을 서버 (제공자)라고 부름
- 클라이언트 -> 서버로 보내는 편지 : 요청 메세지
- 서버 -> 클라이언트로 보내는 편지 : 응답 메세지
- 이 편지를 쓰는 방식에 따라 HTTP 웹 서버, HTTPS 웹 서버 등을 구분
- 이 편지를 우체통에 넣으면 요청 메세지는 스트림을 타고 각 서버로 전달, 편지를 읽은 웹 서버는 스트림을 통해 적절한 웹 페이지를 클라이언트에 제공

* 스트림 : 프로그램이 프로그램 외부와 통신할 때는 컴퓨터 속에 흐르는 물길이라고 배유할 수 있음

- 요청 메세지를 사용해야 사용자에게 적절한 웹 페이지를 제공할 수 있음
- 응답 메세지를 사용하면 쿠키를 저장하거나 추출할 수 있고 강제로 웹 페이지를 이동시킬 수도 있음


6.2. server 객체
- http 모듈에서 가장 중요한 객체
- http 모듈의 createServer() 메소드를 사용하면 server 객체를 생성할 수 있음

* server 객체의 메소드
- listen() : 서버 실행
- close() : 서버 종료

* 포트란?
- 컴퓨터와 컴퓨터를 연결하는 정보의 출입구 역할을 하는 곳 (정보가 정박하고 출발할 수 있는 '항구')
- 0번 부터 65535번 까지포트가 있음
- 예를 들어 52273번 포트를 사용한다는 것은 컴퓨터에서 52273번 항구에 서버 프로그램을 연결해 다른 컴퓨터에서 접속할 수 있게 만드는 것

- server 객체에서 중요한 것은 메소드보다 이벤트
- server 객체는 EventEmitter 객체를 기반으로 만들어졌으므로 이벤트를 연결할 수 있음

* server 객체의 이벤트
- request : 클라이언트가 요청할 때 발생하는 이벤트
- connection : 클라이언트가 접속할 때 발생하는 이벤트
- close : 서버가 종료될 때 발생하는 이벤트
- checkContinue : 클라이언트가 지속적인 연결을 하고 있을 때 발생하는 이벤트
- upgrade : 클라이언트가 HTTP 업그레이드를 요청할 때 발생하는 이벤트
- clientError : 클라이언트에서 오류가 발생할 때 발생하는 이벤트

- 01_03_http_server.js를 실행한 후 웹 브라우저를 사용해 http://127.0.0.1:52273에 접속하면 응답해줄 웹 페이지가 없으므로 아무것도 출력되지 않음
- 하지만 콘솔 화면에는 이벤트가 실행된 console.log 값이 출력됨

* createServer() 메소드의 매개변수
- server 객체의 이벤트 중 request 이벤트 리스너는 별도로 on() 메소드를 사용해 지정할 필요 없이 createServer() 메소드의 매개변수로 입력할 수 있음

6.3. response 객체
- http://127.0.0.1:52273에 접속하면 아무것도 뜨지 않는 이유는 웹 브라우저가 요청 메세지를 전달했지만 웹 서버가 응답 메시지를 전달하지 않았으므로 웹 브라우저는 응답을 기다리는 상태가 됨
- 클라이언트에 웹 페이지를 제공하려면 응답 메세지를 작성해야 함
- request 이벤트 리스너의 두 번째 매개변수로 전달되는 response 객체를 사용

* response 객체의 메소드
- writeHead() : 응답 헤더 작성
- end() : 응답 본문 작성

=> writeHead() 메소드와 end() 메소드를 사용해 응답 메세지를 작성하고 클라이언트에 제공

6.3.1. File System 모듈을 사용한 HTML 페이지 제공 (03_01_http_server.js)
- 자바스크립트 파일 위에서 모든 HTML 페이지를 문자열로 작성하는 것은 불가능하기 때문에 File System 모듈을 사용해 서버에 존재하는 HTML 페이지를 클라이언트에 제공
- 우선 HTML 페이지를 클라이언트에 제공하려면 서버가 필요함 (03_01_http_server.js)
- File System 모듈을 사용해 사용자에게 HTMLPage.html 파일을 제공할 것이므로 File System 모듈 추출 (03_02_http_html.js)
- 코드를 실행하고 http://127.0.0.1:52273에 접속하면 HTML 페이지를 볼 수 있음

6.3.2. 이미지와 음악 파일 제공 (04_01_http_server.js)
- 웹에서는 이미지나 음악파일, 동영상 파일도 다운로드할 수 있음
- 포트 2개를 사용해 서버를 2개 생성 후, 52273 포트에는 이미지 파일, 52274 포트는 음악 파일을 제공
- 특정 형식 파일을 제공할 때 가장 중요한 것은 응답 헤더의 Content-Type 속성
- Content-Type 속성은 MIME 형식을 입력 (text/html : html파일, image/jpeg : 이미지 파일, audio/mp3 : 음악 파일)

* MIM 형식의 예
- text/plain : 기본적인 텍스트
- text/html : HTML 문서
- text/css : CSS 문서
- text/xml : XML 문서
- image/jpeg : JPG/JPEG 그림 파일
- image/png : PNG 그림 파일
- video/mpeg : MPEG 비디오 파일
- audio/mp3 : MP3 음악 파일

6.3.3. 쿠키 생성
- 쿠키는 키와 값이 들어 있는 작은 데이터 조각으로 이름, 값, 파기 날짜와 경로 정보가 있음
- 쿠키는 서버와 클라이언트에서 모두 저장하고 사용할 수 있으며, 일정 기간 동안 데이터를 저장할 수 있으므로 로그인 상태를 일정 시간 동안 유지해야 하는 페이스북과 같은 웹 사이트에 사용
- response 객체를 사용하면 클라이언트에 쿠키를 할당할 수 있음, 이때 응답 헤더의 Set-Cookie 속성 사용

* Set-Cookie의 속성
- Name = Value;
- Expires = 날짜;
- Domain = 도메인;
- Path = 경로;
- Secure

- 05_02_http_cookie_create.js 처럼 writeHead() 메소드의 옵션 객체에 Set-Cookie 속성 값을 입력
- 만약 쿠키에 Expires 속성과 같은 별도의 속성을 추가하고 싶다면 05_03_http_cookie_end.js 처럼 Set-Cookie 속성 값을 입력
- 처음 요청할 때는 클라이언트가 쿠키를 갖고 있지 않으므로 쿠키가 출력되지 않고, 두 번째 요청부터는 클라이언트가 쿠키를 갖고 있으므로 생성한 쿠키를 출력

6.3.4. 페이지 강제 이동
- 웹 페이지에 접속했을 때 서버에서 강제로 다른 웹 페이지로 이동시키는 경우가 있음 (ex : 포털 사이트에서 로그인을 하면 잠시 흰 화면이 나타났다가 메인 화면으로 이동할 때)
- 웹 페이지를 강제로 이동시킬 때는 응답 헤더의 Location 속성을 사용, Location 속성에 이동하고자 하는 웹 페이지 주소를 입력하기만 하면 됨
- 06_01_http_location.js의 writeHead() 메소드의 첫 번째 매개변수를 Status Code라고 부름
- '302'는 강제 페이지 이동을 구현할 때 많이 사용되는 코드 번호

* HTTP Status Code 예
- 1XX : 처리 중 - 100 Continue
- 2XX : 성공 - 200 OK
- 3XX : 리다이렉트 - 300 Multiple Choices
- 4XX : 클라이언트 오류 -400 Bad Request
- 5XX : 서버 오류 - 500 Internal Server Error

- Status Code를 404로 설정하면 웹 브라우저에서 오류 메세지를 나타냄































